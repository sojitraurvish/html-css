p{color: aqua;}
#id{color: aqua;}
.class{color: aqua;}

header,#id,p.intro{color: aqua;}

p span h1 .innerCls{
    color: aqua;
} 

font-size: 40px;/* 1/96th of an inch */
line-height: 1.3em;/* parent size * 1.3 */

*{/* This * will be applicable to every element with initial value*/
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}


width: 255px;

/* padding */
padding:0px 0px; /* Note: Here when i increase padding of box it changes the actual with of that element because width = margin + border + padding  But if you don't want to increase with of element  so use this property*/
box-sizing: border-box;/*So, now this property with adjust with according to padding*/


width: 900px;
margin: auto;/*margin auto mean center and it will work along with width*/


#fruit{
    float: left;
    width: 50%;
}
#computer{
    float: right;
    width: 48%;
}
#stationary{
    /* float: left; */
    width: 100%;
    clear: left;/* Any left floating element is not allowed to come above me */ 
    /* clear: both; */
}


.navbar{//parent
    overflow: auto;/*when you float any element so it will be overflow from it's parent and again rearrange it we have to give overflow:auto to it's parent*/
}

.navbar li{//child
    float: left;/*when you float any element so it will be overflow from it's parent and again rearrange it we have to give overflow:auto to it's parent*/
    list-style: none;
    background-color: aquamarine;
    margin: 13px 20px;
}


/*there are two type of element inline and block and you can set width for block element only for margin auto*/ 
/* and in order to change element you can write display: inline;or block;*/ 
/* Now if you have inline block and if you want to set width of it and you want your block should be remain inline block so you have one Property called inline-block it also work as inline property but now you can set width for margin auto*/ 
header{
    width: 20%;/*why i am able to set width? because it's block element not inline element*/
    margin: auto;
    border: 2px solid red;
    /* display:none; it remove space of particular element */
}


/* Position : you can use property right left too 
static (default) , 
absolute : mean relative to the parent and you can use can use property like (top,bottom,right,left) , 
relative : mean relative to its normal position but it can'nt overleap on it's normal position and if you want overlapping so use position:absolute; and you can use can use property like (top,bottom,right,left) ,
fixed : fixed mean fixed, 
sticky : sticky mean at where you want ro stick the box while scrolling 
*/ 
#box3{
    /* position: static;*//*by default it is static */
    position: relative;/*  */
}


invert function in css to convert image into white to black


#box1{
    position: relative;
    top:80px;
    background-color: green;
    z-index: 1 ;/* z-index specifies which element stay upon another element*/ 
}
    
#box2{
    /*visibility*/
    /* visibility: visible(default value); */
    /* visibility: hidden; hide element but not remove it's space*/
    /* display:none; it remove entire element with it's space*/
    /*z-index only work with position relative absolute fixed or sticky*/

    position: relative;
    top:34px;
    background-color: red;
}
#box3{background-color: blue;
    position: relative;
    z-index: 3 ;}